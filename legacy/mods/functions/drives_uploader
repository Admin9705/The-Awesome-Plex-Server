#!/bin/bash
############# https://github.com/plexguide/PlexGuide.com/graphs/contributors ###
drives_uploader() {

# pulls stored info ############################################################
drives_menu_start_setup

# temporary ####################################################################
drives_uploader_start

# generates starting part of the log ###########################################
drives_uploader_log1

# keygen #######################################################################
drives_uploader_slot_keygen

# if nothing to upload #########################################################
if [[ $(cat "$path_upload"/upload.long) == "" ]]; then

path_sanity_check=$(find /pg/complete/ -type f\
 ! \( -path "/pg/complete/nzbget/*" -o -path "/pg/complete/777/*" \)\
 -printf "\n%AT %p" | sort -k1 | cut -d " " -f 2- | tail -n +2)

  if [[ $path_sanity_check = "" ]]; then
    echo "NOTHING TO UPLOAD"
    echo "Nothing to Upload" >> "$logpath_primary"
  else
    echo "ITEMS PENDING UPLOAD - MUST BE 4 MINUTES OLD"
    echo "Items Pending Upload - Must Be 4 Minutes Old" >> "$logpath_primary"
  fi

sleep 5; drives_uploader && exit; fi

echo "" >> $logpath_primary
# exempt items from list #######################################################
drives_uploader_exempt

# before looping, ensures to reset item to fetch from merit list ###############
merit_count=0

# start looping through slot folders ###########################################
while read b; do

  # log status ###########################################################
  transport_loop="off"
  mkdir -p "$path_upload"/${b}
    if [[ ! -e "/pg/var/transport/${b}/key.long" ]]; then
        #echo "SLOT ${b}: Available" >> "$logpath_primary"
        let "merit_count=merit_count+1"
        touch /pg/var/transport/${b}/key.short

      # generates keys base on merit list order ################################
      drives_uploader_merit_list

      # selecting path based on method #########################################
      drives_uploader_path_method

        # upload action ########################################################
        if [[ $(cat "/pg/var/transport/${b}/key.long") != "" ]]; then

        # logging information
        drives_uploader_log2

        # store slot information for variable recall
        echo "$b" > /pg/var/transport/$b/var.slot

        # outputs size of the file for tally ###################################
        stat -c %s "$longkey" > /pg/var/transport/${b}/file.size

        # execution of movement#################################################
        drives_uploader_rclone

        # delete folder info ###################################################
        var_slot=$(cat /pg/var/transport/$b/var.slot)

        # self delete folder info because file stuck or 403; recycles ##########
        upload_checker=$(echo $longkey)
    fi
  else
    drives_uploader_log3
fi
  # prevents overloading ###################################################
  sleep .2
done <"$path_upload"/slot.list

# outputs rclone info ##########################################################
drives_uploader_slotcheck

# total tally ##################################################################
drives_uploader_tally

# repeat #######################################################################
drives_uploader && exit
}
