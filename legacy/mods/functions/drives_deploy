#!/bin/bash
############# https://github.com/plexguide/PlexGuide.com/graphs/contributors ###
drives_deploy() {

temp99=""; gc_final=""; gd_final=""
rm -rf /pg/tmp/drives.list && touch /pg/tmp/drives.list
rm -rf /pg/tmp/edrives.list && touch /pg/tmp/edrives.list
rm -rf /pg/tmp/drives.bad && touch /pg/tmp/drives.bad
rm -rf /pg/tmp/edrives.bad && touch /pg/tmp/edrives.bad

rm -rf /pg/var/transport/*
drives_menu_start_setup

if [[ -e "/pg/var/drives/gd/token.info" ]]; then
  gdcheck=$(cat /pg/var/drives/gd/gd.info)
    if [[ "$gdcheck" == "VALID" ]]; then
      common_header "ðŸ’¾  TESTING: Unencrypted GDrive Token"; sleep 0
      gdr_check=$(rclone lsd --config /pg/var/drives/gd/gd.conf gd: | grep "plexguide.com")
      if [[ "$gdr_check" != "" ]]; then common_header "ðŸ’¾  PASSED:  Unencrypted Token gd is [VALID]" && gd_final="VALID"
    else
        common_header "ðŸ’¾  PASSED:  Unencrypted Token gd is [INVALID]" && gd_final="INVALID"
    fi
    ############################################################################
    if [[ -e "/pg/var/drives/gd/token.encrypted" ]]; then
      common_header "ðŸ’¾  TESTING: Encrypted GDrive Token"; sleep 0
      gdrc_check=$(rclone lsd --config /pg/var/drives/gd/gd.conf gc: | grep "plexguide.com")
      if [[ "$gdrc_check" != "" ]]; then common_header "ðŸ’¾  PASSED:  Encrypted Token gd is [VALID]"
      gc_final="VALID"
    else
      common_header "ðŸ’¾  FAILED:  Encrypted Token gd is [INVALID]"
      gc_final="INVALID"; fi; fi
fi; fi
sleep 2
################################################################################
touch /pg/var/drives/valid.drives && valid_drive_check=$(cat /pg/var/drives/valid.drives)

if [[ "$valid_drive_check" != "" ]]; then
fmt -w 79 "/pg/var/drives/valid.drives" > "/pg/tmp/tokenlist.wrap"
tokenlist=$(cat /pg/tmp/tokenlist.wrap)

touch /pg/var/drives/evalid.drives
fmt -w 79 "/pg/var/drives/evalid.drives" > "/pg/tmp/etokenlist.wrap"
etokenlist=$(cat /pg/tmp/etokenlist.wrap)

if [[ "$etokenlist" == "" ]]; then etokenlist="No Encrypted Tokens Discovered"; fi

common_message "ðŸš€  Checking SDrive Tokens" "
ðŸ’¾ Active Drives: $active_count of $sd_list_track

[UNENCRYPTED]
$tokenlist

[ENCRYPTED]
$etokenlist"; sleep 3

while read p; do
  equick_check="" && enote="" && f_final="" && f_log=""
  common_header "ðŸ’¾  TESTING: SDrive Token(s) for $p"
  quick_check=$(rclone lsd --config /pg/var/drives/shared/$p/$p.conf ${p}: | grep "plexguide.com")
    if [[ -e "/pg/var/drives/e.tokens/$p" ]]; then
    enote=yes
    equick_check=$(rclone lsd --config /pg/var/drives/shared/$p/$p.conf ${p}c: | grep "plexguide.com"); fi

  if [[ "$quick_check" != "" && "$equick_check" == "" && "$enote" != "yes" ]]; then
    common_header "ðŸ’¾  PASSED:  Unencrypted Token $p is valid"; sleep 1
    echo "$p" >> /pg/tmp/drives.list; fi
  if [[ "$quick_check" == "" && "$equick_check" == "" && "$enote" != "yes" ]]; then
    common_header "ðŸ’¾  FAILED:  Unencrypted Token $p is valid"; sleep 1
    echo "Token: $p" >> /pg/tmp/drives.bad; fi

  if [[ "$quick_check" != "" && "$equick_check" != "" && "$enote" == "yes" ]]; then
    common_header "ðŸ’¾  PASSED:  Unencrypted & Encrypted Token $p is valid"
    echo "$p" >> /pg/tmp/drives.list && echo "$p" >> /pg/tmp/edrives.list; sleep 0; fi
  if [[ "$quick_check" != "" && "$equick_check" == "" && "$enote" == "yes" ]]; then
    common_header "ðŸ’¾  FAILED:  Encrypted token for $p failed"
    echo "Token: $p" >> /pg/tmp/edrives.bad; sleep 0; fi
done </pg/var/drives/valid.drives; fi

# if uploading using blitz #####################################################
drives_deploy_blitz_token_check

# log checks ###################################################################
f_log="/pg/tmp/failed_drive_log"
rm -rf $f_log

if [[ "$sd_key" == "INVALID" ]]; then echo "[${sd_key_upload}] SD Blitz Key ~ FAILED" >> $f_log; fi
if [[ "$gd_final" == "INVALID" ]]; then echo "[GD] Unencrypt ~ FAILED" >> $f_log; fi
if [[ "$gc_final" == "INVALID" ]]; then echo "[GC] Encrypted ~ FAILED" >> $f_log; fi

sd_drives_failed=$(cat /pg/tmp/drives.bad)
sc_drives_failed=$(cat /pg/tmp/edrives.bad)

if [[ "$sd_drives_failed" != "" ]]; then echo "$sd_drives_failed" >> $f_log; fi
if [[ "$sc_drives_failed" != "" ]]; then echo "$sc_drives_failed" >> $f_log; fi

if [[ -e "$f_log" ]]; then f_final=$(cat $f_log); fi

if [[ "$f_final" != "" ]]; then
common_message "ðŸš€  Failed Checks" "
ðŸ’¾ Log Information Below - The following checks have failed!

Please go back and redeploy and correct any of the following mounts that
deployed incorrectly! This is to prevent errors in the deployment of /pg/unity
and from losing and storing data incorrectly!

$f_final"
echo "$storage_method - FAILED" > "/pg/var/drives/deployed.mode"
common_confirm && drives_menu_start && exit; fi

common_header "ðŸ’¾  PASSED:  All Drive Tokens Are Valid!"; sleep 0
echo "$storage_method - FAILED" > "/pg/var/drives/deployed.mode"

rm -rf /pg/tmp/deploy.log

if [[ "$gd_final" == "VALID" ]]; then
  common_header "ðŸ’¾  DEPLOYING:  Unencrypted GDrive ~ /pg/gd"; sleep 0
  echo "Mounted: GDrive (Unencrypt) - /pg/gd" >> /pg/tmp/deploy.log
  drives_deploy_mounts gd; fi

while read p; do
  common_header "ðŸ’¾  DEPLOYING:  Unencrypted SDrive ~ /pg/$p"; sleep 0
  drives_deploy_mounts $p
  echo "Mounted: SDrive (Unencrypt) - /pg/$p" >> /pg/tmp/deploy.log
done </pg/tmp/drives.list

if [[ "$gc_final" == "VALID" ]]; then
  common_header "ðŸ’¾  DEPLOYING:  Encrypted GDrive ~ /pg/gc"; sleep 0
  echo "Mounted: GDrive (Encrypted) - /pg/gc" >> /pg/tmp/deploy.log
  drives_deploy_mounts gc; fi

while read p; do
  temp99="c"
  common_header "ðŸ’¾  DEPLOYING:  Encrypted SDrive ~ /pg/$p$temp99"; sleep 0
  echo "Mounted: SDrive (Encrypted) - /pg/$p$temp99" >> /pg/tmp/deploy.log
  drives_deploy_mounts $p
done </pg/tmp/edrives.list
# REMOVE WHATS CURRENTLY TRACKED ###############################################
rm -rf /pg/var/transport/{01,02,03,04,05,06,07,08}

# ENABLE UPLOADER ##############################################################
if [[ "$storage_method" == "BLITZ" || "$storage_method" == "BASIC" ]]; then
echo "$drive_upload" > /pg/var/drives/shared.drive
drives_deploy_uploader; fi

echo "$storage_method" > /pg/var/drives/storage.method
deploy_log_output=$(cat /pg/tmp/deploy.log)
# FINAL OUTPUT MESSAGE #########################################################
common_header "ðŸ’¾  DEPLOYING:  PG Drives Unity"; sleep 2; drives_deploy_unity
common_header "ðŸ’¾  DEPLOYED:  PG Drives @ /pg/unity"

common_message "ðŸš€  Deployment Log" "
ðŸ’¾ The following drives have deployed below:"
echo "$deploy_log_output"
echo "Mounted: Unity              - /pg/unity"

echo "" && common_confirm

echo "$storage_method - VALID" > "/pg/var/drives/deployed.mode"

drives_menu_start && exit
}
