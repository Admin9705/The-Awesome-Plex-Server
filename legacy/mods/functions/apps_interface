#!/bin/bash
############# https://github.com/plexguide/PlexGuide.com/graphs/contributors ###
apps_interface() {

apps_interface_start

touch /pg/tmp/appstoinstall.list /pg/tmp/list.tmp
installqueuecheck=$(cat /pg/tmp/appstoinstall.list)
if [ ! -z "$installqueuecheck" ]; then installinfo="| [A] To Install Apps(s)"; else installinfo=""; fi

fmt -w 79 "/pg/tmp/list.tmp" > "/pg/tmp/wrap.list"
app_display=$(cat /pg/tmp/wrap.list)
fmt -w 79 "/pg/tmp/appstoinstall.list" > "/pg/tmp/appstoinstall.wrap"
apps_to_install=$(cat /pg/tmp/appstoinstall.wrap)

# sets message
if [[ "$sapp" == "primary" ]]; then
smessage="💬  Visit ~ https://plexguide.com/wiki/apps-primary"
elif [[ "$sapp" == "community" ]]; then
smessage="💬  Visit ~ https://plexguide.com/wiki/apps-community"
elif [[ "$sapp" == "community" ]]; then
smessage="💬  Visit ~ https://plexguide.com/wiki/apps-personal"; fi

# sets up the primary interface
common_message "🚀 App Interface | 📂 App Type ~ $sapp | PGX Edition" "$smessage

$app_display

[Z] Quit & Exit Interface $installinfo"

read -p '↘️  Type the Application | Press [ENTER]: ' typed < /dev/tty
  if [[ "$typed" == "z" || "$typed" == "Z" ]]; then apps_menu; exit; fi
  if [[ "$typed" == "A" || "$typed" == "a" ]]; then apps_loop_install; exit; fi

# ensures nothing happens if user types a nonexistant app
existcheck=$(echo $app_display | grep "$typed" -w)
  if [ -z "$existcheck" ]; then echo "";
  read -p '⛔️  '$typed' <<< does not exist or has been selected | Press [ENTER]' badinput < /dev/tty
  apps_interface; fi

app=$typed

common_fcreate_silent /pg/data/$app
apps_interface_sub

}
