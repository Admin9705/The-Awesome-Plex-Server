#!/bin/bash
############# https://github.com/plexguide/PlexGuide.com/graphs/contributors ###
start_basics() {

###################### FOR VARIABLS ROLE SO DOESNT CREATE RED - START
file="/pg/var"
if [ ! -e "$file" ]; then
   mkdir -p /pg/var/logs 1>/dev/null 2>&1
   chown -R 0775 /pg/var 1>/dev/null 2>&1
   chmod -R 1000:1000 /pg/var 1>/dev/null 2>&1
fi

file="/pg/data/blitz"
if [ ! -e "$file" ]; then
   mkdir -p /pg/data/blitz 1>/dev/null 2>&1
   chown 0775 /pg/data/blitz 1>/dev/null 2>&1
   chmod 1000:1000 /pg/data/blitz 1>/dev/null 2>&1
fi

###################################################### SERVERID
if [[ ! -e "/pg/var/server.id" ]]; then
  echo "PG-$((1 + RANDOM * RANDOM))" > /pg/var/server.id; fi
  serverid=$(cat /pg/var/server.id)
#######################################################

###################### FOR VARIABLS ROLE SO DOESNT CREATE RED - START
variable /pg/var/pgfork.project "NOT-SET"
variable /pg/var/pgfork.version "NOT-SET"
variable /pg/var/tld.program "NOT-SET"
variable /pg/var/plextoken "NOT-SET"
variable /pg/var/server.ht ""
variable /pg/var/server.port ""
variable /pg/var/server.domain "NOT-SET"
variable /pg/var/tld.type "standard"
variable /pg/var/transcode.path "standard"
variable /pg/var/pgclone.transport "NOT-SET"
variable /pg/var/plex.claim ""
variable /pg/var/hd.path "/pg/unity"

#### set daily upload variable
mkdir -p /pg/var/drives/size/
common_main /pg/var/drives/size/tally.total 0 "tally_total"

#### Temp Fix - Ficommon_main /pg/var/drives/size/tally.total 0 tally_total
#xes Bugged AppGuardserverht=$(cat /pg/var/server.ht)
if [ "$serverht" == "NOT-SET" ]; then
rm /pg/var/server.ht
touch /pg/var/server.ht
fi

hostname -I | awk '{print $1}' > /pg/var/server.ip
###################### FOR VARIABLS ROLE SO DOESNT CREATE RED - END
echo "export NCURSES_NO_UTF8_ACS=1" >> /etc/bash.bashrc.local

# run pg main
file="/pg/var/update.failed"
if [ -e "$file" ]; then rm -rf /pg/var/update.failed
  exit; fi
#################################################################################

# Touch Variables Incase They Do Not Exist
touch /pg/var/pg.edition
touch /pg/var/server.id
touch /pg/var/pg.number
touch /pg/var/traefik.deployed
touch /pg/var/server.ht
touch /pg/var/server.port
touch /pg/var/pg.server.deploy

# For PG UI - Force Variable to Set
ports=$(cat /pg/var/server.port)
if [ "$ports" == "" ]; then echo "Open" > /pg/var/pg.ports
else echo "Closed" > /pg/var/pg.ports; fi

ansible --version | head -n +1 | awk '{print $2'} > /pg/var/pg.ansible
docker --version | head -n +1 | awk '{print $3'} | sed 's/,$//' > /pg/var/pg.docker
cat /etc/os-release | head -n +5 | tail -n +5 | cut -d'"' -f2 > /pg/var/pg.os

file="/pg/var/gce.false"
if [ -e "$file" ]; then echo "No" > /pg/var/pg.gce; else echo "Yes" > /pg/var/pg.gce; fi

# Declare Traefik Deployed Docker State
if [[ $(docker ps | grep "traefik") == "" ]]; then
  traefik="NOT DEPLOYED"
  echo "Not Deployed" > /pg/var/pg.traefik
else
  traefik="DEPLOYED"
  echo "Deployed" > /pg/var/pg.traefik
fi

if [[ $(docker ps | grep "oauth") == "" ]]; then
  traefik="NOT DEPLOYED"
  echo "Not Deployed" > /pg/var/pg.auth
else
  traefik="DEPLOYED"
  echo "Deployed" > /pg/var/pg.oauth
fi

# For ZipLocations
file="/pg/var/data.location"
if [ ! -e "$file" ]; then echo "/pg/data/blitz" > /pg/var/data.location; fi

space=$(cat /pg/var/data.location)
used=$(df -h /pg/data/blitz | tail -n +2 | awk '{print $3}')
capacity=$(df -h /pg/data/blitz | tail -n +2 | awk '{print $2}')
percentage=$(df -h /pg/data/blitz | tail -n +2 | awk '{print $5}')

# For the PGBlitz UI
echo "$used" > /pg/var/pg.used
echo "$capacity" > /pg/var/pg.capacity

}
