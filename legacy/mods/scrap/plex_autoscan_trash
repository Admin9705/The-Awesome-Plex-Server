#!/bin/bash
############# https://github.com/plexguide/PlexGuide.com/graphs/contributors ###
plex_autoscan_trash () {

# VARIABLES ####################################################################
pgrole="plex_autoscan"

common_fcreate_silent /pg/var/plex_autoscan
common_copy /pg/mods/plex_autoscan/* /pg/var/plex_autoscan

plex_autoscan_vars
################################################################################

# JSON EXPORT ##################################################################
cat <<- EOF > "/pg/var/plex_autoscan/config.json"
{
  "DOCKER_NAME": "",
  "GOOGLE": {
    "ENABLED": false,
    "CLIENT_ID": "${pas_client_id}",
    "CLIENT_SECRET": "${pas_client_secret}",
    "ALLOWED": {
      "FILE_PATHS": [],
      "FILE_EXTENSIONS": true,
      "FILE_EXTENSIONS_LIST": [
        "webm","mkv","flv","vob","ogv","ogg","drc","gif",
        "gifv","mng","avi","mov","qt","wmv","yuv","rm",
        "rmvb","asf","amv","mp4","m4p","m4v","mpg","mp2",
        "mpeg","mpe","mpv","m2v","m4v","svi","3gp","3g2",
        "mxf","roq","nsv","f4v","f4p","f4a","f4b","mp3",
        "flac","ts"
      ],
      "MIME_TYPES": true,
      "MIME_TYPES_LIST": [
        "video"
      ]
    },
    "TEAMDRIVE": false,
    "TEAMDRIVES": [],
    "POLL_INTERVAL": 60,
    "SHOW_CACHE_LOGS": false
  },
  "PLEX_ANALYZE_DIRECTORY": true,
  "PLEX_ANALYZE_TYPE": "basic",
  "PLEX_FIX_MISMATCHED": false,
  "PLEX_FIX_MISMATCHED_LANG": "en",
  "PLEX_DATABASE_PATH": "/pg/data/plex/database/Library/Application Support/Plex Media Server/Plug-in Support/Databases/com.plexapp.plugins.library.db",
  "PLEX_EMPTY_TRASH": false,
  "PLEX_EMPTY_TRASH_CONTROL_FILES": [
    "/pg/unity/mounted.bin"
  ],
  "PLEX_EMPTY_TRASH_MAX_FILES": 100,
  "PLEX_EMPTY_TRASH_ZERO_DELETED": false,
  "PLEX_LD_LIBRARY_PATH": "/usr/lib/plexmediaserver/lib",
  "PLEX_LOCAL_URL": "http://localhost:32400",
  "PLEX_SCANNER": "/usr/lib/plexmediaserver/Plex\\ Media\\ Scanner",
  "PLEX_SUPPORT_DIR": "/var/lib/plexmediaserver/Library/Application\\ Support",
  "PLEX_USER": "plex",
  "PLEX_TOKEN": "{$pas_token}",
  "PLEX_CHECK_BEFORE_SCAN": false,
  "PLEX_WAIT_FOR_EXTERNAL_SCANNERS": true,
  "RCLONE": {
    "BINARY": "/usr/bin/rclone",
    "CONFIG": "~/.config/rclone/rclone.conf",
    "CRYPT_MAPPINGS": {
    },
    "RC_CACHE_REFRESH": {
      "ENABLED": false,
      "FILE_EXISTS_TO_REMOTE_MAPPINGS": {
      "Media/": [
          "/mnt/rclone/Media/"
      ]
      },
      "RC_URL": "http://localhost:5572"
    }
  },
  "RUN_COMMAND_BEFORE_SCAN": "",
  "SERVER_ALLOW_MANUAL_SCAN": false,
  "SERVER_FILE_EXIST_PATH_MAPPINGS": {
      "/mnt/unionfs/media/": [
          "/data/"
      ]
  },
  "SERVER_IGNORE_LIST": [
    "/.grab/",
    ".DS_Store",
    "Thumbs.db"
  ],
  "SERVER_IP": "0.0.0.0",
  "SERVER_MAX_FILE_CHECKS": 10,
  "SERVER_PASS": "${pas_server_pass}",
  "SERVER_PATH_MAPPINGS": {
      "/mnt/unionfs/": [
          "~/media/fused/"
      ]
  },
  "SERVER_PORT": 3468,
  "SERVER_SCAN_DELAY": 30,
  "SERVER_SCAN_FOLDER_ON_FILE_EXISTS_EXHAUSTION": false,
  "SERVER_SCAN_PRIORITIES": {
    "1": [
      "/Movies/"
    ],
    "2": [
      "/TV/"
    ]
  },
  "SERVER_USE_SQLITE": true,
  "USE_DOCKER": false,
  "USE_SUDO": false
}
EOF

plex_autoscan_execute() {

plex_autoscan_vars
ansible-playbook /pg/apps/plex_autoscan.yml

# After Actions ################################################################
service_path="/etc/systemd/system/plex_autoscan.service"

if [[ -e "$service_path" ]]; then
common_header "ðŸ’¾  NOTICE:  Stopping/Disabling OLD PAS Service"; sleep 1
systemctl daemon-reload && systemctl stop plex_autoscan && systemctl disable plex_autoscan && rm -rf "$service_path"; fi

cp -f /pg/var/plex_autoscan/plex_autoscan.service "$service_path"
common_header "ðŸ’¾  NOTICE:  Enabling/Starting NEW PAS Service" && sleep 1
systemctl daemon-reload && systemctl enable plex_autoscan && systemctl restart plex_autoscan

common_header "ðŸ’¾  ENABLED: PAS Service"
common_confirm
}

}
