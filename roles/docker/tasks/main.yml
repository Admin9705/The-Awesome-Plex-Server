#!/bin/bash
#
# [PlexGuide Ansible Role]
#
# Maintainer & Modded By: Admin9705 & Deiteq
# URL:                    https://plexguide.com
#
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
# Original Ansible Role: l3uddz, Desimaniac - cloudbox.rocks 
#################################################################################
---
- name: Install required packages
  apt: "name={{item}} state=present"
  with_items:
    - apt-transport-https
    - ca-certificates
    - software-properties-common

- name: Add official gpg signing key
  apt_key:
    id: 0EBFCD88
    url: https://download.docker.com/linux/ubuntu/gpg

############################################# DOCKER VARIABLES RECALLED
- name: Register Docker
  shell: "cat /var/plexguide/pg.docker16.full"
  register: docversion
  ignore_errors: True
  when: ansible_distribution_version == "16.04"

- name: Register Edition
  shell: "cat /var/plexguide/pg.docker16.edition"
  register: docedition
  ignore_errors: True
  when: ansible_distribution_version == "16.04"

- name: Register Docker
  shell: "cat /var/plexguide/pg.docker18.full"
  register: docversion
  ignore_errors: True
  when: ansible_distribution_version == "18.04"

- name: Register Edition
  shell: "cat /var/plexguide/pg.docker18.edition"
  register: docedition
  ignore_errors: True
  when: ansible_distribution_version == "18.04"

############################################# DEPLOY DOCKER
- name: "Docker Check"
  stat:
    path: "/usr/bin/docker"
  register: check

- name: "Stop All Containers"
  shell: "docker stop $(docker ps -a -q)"
  ignore_errors: yes
  when: check.stat.exists

- name: Add official repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} {{ docedition.stdout }}"

- name: Release docker-ce from hold
  dpkg_selections:
    name: docker-ce
    selection: install

- name: Install docker-ce (Please Wait)
  apt:
    name: docker-ce={{docversion.stdout}}
    state: present
    update_cache: yes
    force: yes

- name: Put docker-ce into hold
  dpkg_selections:
    name: docker-ce
    selection: hold

- name: Check docker daemon.json exists
  stat:
    path: /etc/docker/daemon.json
  register: docker_daemon

- name: Stop docker to enable overlay2
  systemd: state=stopped name=docker enabled=yes
  when: docker_daemon.stat.exists == False

- name: Import daemon.json
  copy: "src=daemon.json dest=/etc/docker/daemon.json force=yes mode=0775"
  when: docker_daemon.stat.exists == False

- name: Start docker (Please Wait)
  systemd: state=started name=docker enabled=yes
  when: docker_daemon.stat.exists == False

- name: "Wait for 20 seconds before commencing"
  wait_for:
    timeout: 20

- name: Check override folder exists
  stat:
    path: /etc/systemd/system/docker.service.d
  register: docker_override

- name: Create override folder
  file: "path=/etc/systemd/system/docker.service.d state=directory mode=0775"
  when: docker_override.stat.exists == False
  tags: docker_standard

- name: Import override file
  copy: "src=override.conf dest=/etc/systemd/system/docker.service.d/override.conf force=yes mode=0775"
  tags: docker_standard

- name: create plexguide network
  docker_network:
    name: "plexguide"
    state: present
  tags: docker_standard

- name: "Start All Containers"
  shell: "docker start $(docker ps -a -q)"
  ignore_errors: yes
  when: check.stat.exists