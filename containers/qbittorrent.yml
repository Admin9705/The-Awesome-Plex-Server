#!/bin/bash
#
# Title:      PlexGuide (Reference Title File)
# Author(s):  Admin9705
# URL:        https://plexguide.com - http://github.plexguide.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:

# FACTS #######################################################################

  - name: "Set Known Facts"
    set_fact:
      pgrole: "qbittorrent"
      intport: "8080"
      extport: "8081"
      image: "linuxserver/qbittorrent"

# CORE (MANDATORY) #############################################################
  - name: CronJob Role
    include_tasks: "/opt/plexguide/containers/_core.yml"

# EXTRA FOR QBITORRENT #########################################################
  - name: Create Basic directories for qBittorrent
    file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
    with_items:
      - "{{path.stdout}}/{{pgrole}}"
      - "/opt/appdata/{{pgrole}}"
      - "/opt/appdata/{{pgrole}}/config"

# LABELS ######################################################################

  - name: "Setting PG Labels"
    set_fact:
      pg_labels:
        traefik.frontend.auth.basic.users: "{{auth.stdout}}"
        traefik.enable: "true"
        traefik.port: "{{intport}}"
        traefik.frontend.redirect.entryPoint: "https"
        traefik.frontend.rule: "Host:{{pgrole}}.{{domain.stdout}},{{tldset}}"

  - name: "Setting PG Volumes"
    set_fact:
      pg_volumes:
        - "/opt/appdata/{{pgrole}}/config:/config"
        - "/mnt/unionfs:/unionfs"
        - "{{path.stdout}}/{{pgrole}}/torrents:/torrents"
        - "{{path.stdout}}/{{pgrole}}/downloads:/qbit-downloads"
        - "{{path.stdout}}/{{pgrole}}/incomplete:/incomplete"
        - "/etc/localtime:/etc/localtime:ro"

  - name: "Setting PG ENV"
    set_fact:
      pg_env:
        PUID: 1000
        PGID: 1000

# MAIN DEPLOYMENT #############################################################
  - name: ConfCheck
    stat:
      path: "/opt/appdata/qbittorrent/config/qBittorrent/qBittorrent.conf"
    register: confcheck

  - name: "Deploying Container - {{pgrole}}"
    docker_container:
      name: "{{pgrole}}"
      image: "{{image}}"
      pull: yes
      published_ports:
        - "{{ports.stdout}}{{extport}}:{{intport}}"
      volumes: "{{pg_volumes}}"
      env: "{{pg_env}}"
      restart_policy: always
      networks:
        - name: plexguide
          aliases:
            - "{{pgrole}}"
      state: started
      labels: "{{pg_labels}}"

  # ENDING TASK FOR RUTORRENT ####################################################
  - name: "First Time Check"
    block:

    - name: Please Wait - Pending .conf generation from qBittorrent
      wait_for:
        path: "/opt/appdata/qbittorrent/config/qBittorrent/qBittorrent.conf"
        state: present

    - name: "Wait 5 Seconds"
      wait_for:
        timeout: 5

    - name: Set Download Location
      lineinfile:
        path: "/opt/appdata/qbittorrent/config/qBittorrent/qBittorrent.conf"
        regexp: 'Downloads.SavePath='
        line: 'Downloads.SavePath=/qbit-downloads/'
        state: present

    - name: Set Incomplete Download Location
      lineinfile:
        path: "/opt/appdata/qbittorrent/config/qBittorrent/qBittorrent.conf"
        regexp: 'Downloads.TempPath='
        line: 'Downloads.TempPath=/incomplete/'
        state: present

    - name: Turn off DHT
      lineinfile:
        path: "/opt/appdata/qbittorrent/config/qBittorrent/qBittorrent.conf"
        regexp: 'Bitorrent.DHT='
        line: 'Bitorrent.DHT=false'
        state: present

    - name: Restart Container
      docker_container:
        name: qbittorrent
        state: started

    when: not confcheck.stat.exists
