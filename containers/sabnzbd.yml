#!/bin/bash
#
# Title:      PlexGuide (Reference Title File)
# Author(s):  Admin9705
# URL:        https://plexguide.com - http://github.plexguide.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:

# FACTS #######################################################################

  - name: "Set Known Facts"
    set_fact:
      pgrole: "sabnzbd"
      intport: "8080"
      extport: "8080"
      image: "linuxserver/sabnzbd"

# CORE (MANDATORY) ############################################################
  - name: CronJob Role
    include_tasks: "/opt/plexguide/containers/_core.yml"

  - name: "Chown NZB Owners"
    shell: "chown -R 1000:1000 {{path.stdout}}/downloads/{{pgrole}}/"

  - name: "SAB Permissions Set"
    shell: "chmod -R 775 {{path.stdout}}/downloads/{{pgrole}}/"

  - name: "Ini Check"
    stat:
      path: /opt/appdata/sabnzbd/sabnzbd.ini
    register: inicheck

# LABELS ######################################################################

  - name: "Setting PG Labels"
    set_fact:
      pg_labels:
        traefik.enable: "true"
        traefik.port: "{{intport}}"
        traefik.frontend.redirect.entryPoint: "https"
        traefik.frontend.rule: "Host:{{pgrole}}.{{domain.stdout}},{{tldset}}"

  - name: "Setting PG Volumes"
    set_fact:
      pg_volumes:
        - "/opt/appdata/sabnzbd/:/config/"
        - "{{path.stdout}}/sab/downloads:/config/Downloads"
        - "/mnt/unionfs:/unionfs"
        - "/mnt:/mnt"
        - "/etc/localtime:/etc/localtime:ro"

  - name: "Setting PG ENV"
    set_fact:
      pg_env:
        PUID: 1000
        PGID: 1000

# MAIN DEPLOYMENT #############################################################

  - name: "Deploying Container - {{pgrole}}"
    docker_container:
      name: "{{pgrole}}"
      image: "{{image}}"
      pull: yes
      published_ports:
        - "{{ports.stdout}}{{extport}}:{{intport}}"
      volumes: "{{pg_volumes}}"
      env: "{{pg_env}}"
      restart_policy: always
      networks:
        - name: plexguide
          aliases:
            - "{{pgrole}}"
      state: started
      labels: "{{pg_labels}}"

# ENDING FOR SABNZBD ###########################################################
  - name: "Path for .ini"
    wait_for:
      path: "/opt/appdata/sabnzbd/sabnzbd.ini"
      state: present

  - name: "First Time Check"
    block:

    - name: "Customize sabnzbd_ini"
      docker_container:
        name: sabnzbd
        state: stopped

    - name: "SAB Permissions Set"
      shell: "rm -rf /opt/appdata/sabnzbd/Downloads"

    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: 'html_login = ""'
        replace: "html_login = 1"

    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: 'username = ""'
        replace: "username = plex"

    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: 'password = ""'
        replace: "password = guide"

    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "host_whitelist ="
        replace: "host_whitelist = sabnzbd.{{domain.stdout}},"

    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "direct_unpack = 0"
        replace: "direct_unpack = 1"

    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "ignore_samples = 0"
        replace: "ignore_samples = 1"

    ## remove unwanted extensions
    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "unwanted_extensions = ,"
        replace: "unwanted_extensions = exe, com, bat, sh"

    ## ignore and cleanup the following files
    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "cleanup_list = ,"
        replace: "cleanup_list = nfo, exe, com, bat, txt, doc, xls, xlxs, docx, doc, jpg, jeg, gif, png"

    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "action_on_unwanted_extensions = 0"
        replace: "action_on_unwanted_extensions = 2"

    ## aborts encrypted rar rather than pausing
    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "pause_on_pwrar = 1"
        replace: "pause_on_pwrar = 2"

    ## try a new nzb if it fails
    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "new_nzb_on_failure = 0"
        replace: "new_nzb_on_failure = 1"

    ## replace dots with space
    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "replace_dots = 0"
        replace: "replace_dots = 1"

    ## flat_unpack
    - replace:
        path: /opt/appdata/sabnzbd/sabnzbd.ini
        regexp: "flat_unpack = 0"
        replace: "flat_unpack = 1"

    - name: Restart Container
      docker_container:
        name: sabnzbd
        state: started

    - name: "Chown NZB Owners"
      shell: "chown -R 1000:1000 {{path.stdout}}/sab/"

    - name: "SAB Permissions Set"
      shell: "chmod -R 775 {{path.stdout}}/sab/"

    when: not inicheck.stat.exists
